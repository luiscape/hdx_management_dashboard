if (start != end) {
days <- as.numeric(end - start)
pb <- txtProgressBar(min = 0, max = days, char = ".", style = 3)
for (i in 1:days) {
setTxtProgressBar(pb, i)
if (i == 1) date <- start
else date <- start + i
call <- searchTwitter(hash, n = 500,
since = as.character(date),
until = as.character(date))
df <- do.call("rbind", lapply(call, as.data.frame))
x <- data.frame(value = nrow(df),
hashtag = hash,
date = as.character(date))
if (i == 1) y <- x
else y <- rbind(y, x)
}
}
else {
call <- searchTwitter(hash, n = 500, since = as.character(end))
df <- do.call("rbind", lapply(call, as.data.frame))
y <- data.frame(value = nrow(df),
hashtag = hash,
date = as.character(end))
}
return(y)
}
data <- getHashtag(start = as.Date('2014-07-01'))
# default is the call for the query day
getHashtag <- function(hash = "#humanitariandata",
start = as.Date(Sys.time()),
end = as.Date(Sys.time())) {
# query each day independently and get the hash indicator back
if (start != end) {
days <- as.numeric(end - start)
pb <- txtProgressBar(min = 0, max = days, char = ".", style = 3)
for (i in 1:days) {
setTxtProgressBar(pb, i)
if (i == 1) date <- start
else date <- start + i
call <- searchTwitter(hash, n = 500,
since = as.character(date),
until = as.character(date))
df <- do.call("rbind", lapply(call, as.data.frame))
x <- data.frame(value = nrow(df),
hashtag = hash,
date = as.character(date))
if (i == 1) y <- x
else y <- rbind(y, x)
}
}
else {
call <- searchTwitter(hash, n = 500, since = as.character(end))
df <- do.call("rbind", lapply(call, as.data.frame))
y <- data.frame(value = nrow(df),
hashtag = hash,
date = as.character(end))
}
return(y)
}
data <- getHashtag(start = as.Date('2014-07-01'))
searchTwitter("#humanitariandata", n = 500)
# default is the call for the query day
getHashtag <- function(hash = "#humanitariandata",
start = as.Date(Sys.time()),
end = as.Date(Sys.time())) {
# query each day independently and get the hash indicator back
if (start != end) {
days <- as.numeric(end - start)
pb <- txtProgressBar(min = 0, max = days, char = ".", style = 3)
for (i in 1:days) {
setTxtProgressBar(pb, i)
if (i == 1) date <- start
else date <- start + i
call <- searchTwitter(hash, n = 500,
since = as.character(date),
until = as.character(date))
df <- do.call("rbind", lapply(call, as.data.frame))
x <- data.frame(value = nrow(df),
hashtag = hash,
date = as.character(date))
if (i == 1) y <- x
else y <- rbind(y, x)
}
}
else {
call <- searchTwitter(hash, n = 500, since = as.character(end))
df <- do.call("rbind", lapply(call, as.data.frame))
y <- data.frame(value = nrow(df),
hashtag = hash,
date = as.character(end))
}
return(y)
}
data <- getHashtag(start = as.Date('2014-07-01'))
# default is the call for the query day
getHashtag <- function(hash = "#humanitariandata",
start = as.Date(Sys.time()),
end = as.Date(Sys.time())) {
# query each day independently and get the hash indicator back
if (start != end) {
days <- as.numeric(end - start)
pb <- txtProgressBar(min = 0, max = days, char = ".", style = 3)
for (i in 1:days) {
setTxtProgressBar(pb, i)
if (i == 1) date <- start
else date <- start + i
call <- searchTwitter(hash, n = 500,
since = as.character(date),
until = as.character(date))
df <- do.call("rbind", lapply(call, as.data.frame))
x <- data.frame(value = nrow(df),
hashtag = hash,
date = as.character(date))
if (i == 1) y <- x
else y <- rbind(y, x)
}
}
else {
call <- searchTwitter(hash, n = 500, since = as.character(end))
df <- do.call("rbind", lapply(call, as.data.frame))
y <- data.frame(value = nrow(df),
hashtag = hash,
date = as.character(end))
}
return(y)
}
data <- getHashtag(start = as.Date('2014-07-01'))
hash = "#humanitariandata"
call <- searchTwitter(hash, n = 500)
call <- searchTwitter(hash, n = 500
)
?searchTwitter
searchTwitter("#HumanitarianData", n = 500, since = '2014-07-01', until = '2014-01-01')
searchTwitter("#HumanitarianData", n = 500, since = '2014-07-15', until = '2014-01-15')
searchTwitter("#HumanitarianData", n = 500, since = '2014-07-16', until = '2014-01-16')
searchTwitter("#HumanitarianData", n = 500, since = '2014-07-15', until = '2014-01-16')
searchTwitter("#HumanitarianData", n = 500, since = '2014-07-14', until = '2014-01-21')
searchTwitter("#HumanitarianData", n = 500, since = '2014-07-14', until = '2014-01-18')
searchTwitter("#HumanitarianData", n = 500, until = '2014-01-18')
searchTwitter("#HumanitarianData", n = 500, since = '2014-01-18')
call <- searchTwitter("#HumanitarianData", n = 500, since = '2014-01-18')
df <- do.call("rbind", lapply(call, as.data.frame))
View(df)
call <- searchTwitter("#HumanitarianData", n = 500, since = '2014-01-01')
df <- do.call("rbind", lapply(call, as.data.frame))
View(df)
View(df)
df$created <- as.Date(df$created)
View(df)
summary(df$created)
summary(as.factor(df$created))
x <- summary(as.factor(df$created))
x
class(x)
as.data.frame(x)
View(x)
?sumamry
?summary
# default is the call for the query day
getHashtag <- function(hash = "#humanitariandata",
date = as.Date(Sys.time())) {
call <- searchTwitter(hash, n = 2000, since = as.character(end))
df <- do.call("rbind", lapply(call, as.data.frame))
df$created <- as.Date(df$created)
value <- data.frame(summary(df$created))
y <- data.frame(value,
hashtag = hash)
return(y)
}
data <- getHashtag(date = as.Date('2014-07-01'))
# default is the call for the query day
getHashtag <- function(hash = "#humanitariandata",
date = as.Date(Sys.time())) {
call <- searchTwitter(hash, n = 2000, since = as.character(end))
df <- do.call("rbind", lapply(call, as.data.frame))
df$created <- as.Date(df$created)
value <- data.frame(summary(df$created))
y <- data.frame(value,
hashtag = hash)
return(y)
}
data <- getHashtag(date = as.Date('2014-07-01'))
default is the call for the query day
getHashtag <- function(hash = "#humanitariandata",
date = as.Date(Sys.time())) {
call <- searchTwitter(hash, n = 2000, since = as.character(end))
df <- do.call("rbind", lapply(call, as.data.frame))
df$created <- as.Date(df$created)
value <- data.frame(summary(df$created))
y <- data.frame(value,
hashtag = hash)
return(y)
}
# default is the call for the query day
getHashtag <- function(hash = "#humanitariandata",
date = as.Date(Sys.time())) {
call <- searchTwitter(hash, n = 2000, since = as.character(end))
df <- do.call("rbind", lapply(call, as.data.frame))
df$created <- as.Date(df$created)
value <- data.frame(summary(df$created))
y <- data.frame(value,
hashtag = hash)
return(y)
}
data <- getHashtag(date = as.Date('2014-07-01'))
# default is the call for the query day
getHashtag <- function(hash = "#humanitariandata",
date = as.Date(Sys.time())) {
call <- searchTwitter(hash, n = 2000, since = as.character(date))
df <- do.call("rbind", lapply(call, as.data.frame))
df$created <- as.Date(df$created)
value <- data.frame(summary(df$created))
y <- data.frame(value,
hashtag = hash)
return(y)
}
data <- getHashtag(date = as.Date('2014-07-01'))
hash = "#humanitariandata"
date = as.Date('2014-07-01')
call <- searchTwitter(hash, n = 2000, since = as.character(date))
df <- do.call("rbind", lapply(call, as.data.frame))
df$created <- as.Date(df$created)
value <- data.frame(summary(df$created))
value <- summary(df$created)
value
value <- data.frame(summary(as.factor(df$created)))
value
# default is the call for the query day
getHashtag <- function(hash = "#humanitariandata",
date = as.Date(Sys.time())) {
call <- searchTwitter(hash, n = 2000, until = as.character(date))
df <- do.call("rbind", lapply(call, as.data.frame))
df$created <- as.Date(df$created)
value <- data.frame(summary(as.factor(df$created)))
y <- data.frame(value,
hashtag = hash)
return(y)
}
data <- getHashtag(date = as.Date('2014-07-15'))
# default is the call for the query day
getHashtag <- function(hash = "#humanitariandata",
date = as.Date(Sys.time())) {
call <- searchTwitter(hash, n = 2000, since = as.character(date))
df <- do.call("rbind", lapply(call, as.data.frame))
df$created <- as.Date(df$created)
value <- data.frame(summary(as.factor(df$created)))
y <- data.frame(value,
hashtag = hash)
return(y)
}
data <- getHashtag(date = as.Date('2014-07-14'))
View(data)
data <- getHashtag()
View(data)
data <- getHashtag(date = as.Date('2014-07-14'))
View(data)
opendata <- getHashtab(hash = "#opendata")
opendata <- getHashtag(hash = "#opendata")
View(opendata)
insightshdx <- getHashtag(hash = "#insightshdx", date = as.Date('2014-07-14'))
?searchTwitter
?twitteR
# for consistency I am using the scraperwiki name for the db
writeTables(df = humanitariandata,
table_name = 'humanitariandata',
db = 'indicataor_data',
testing = FALSE)
source('twitter/code/write_tables.R')
# for consistency I am using the scraperwiki name for the db
writeTables(df = humanitariandata,
table_name = 'humanitariandata',
db = 'indicataor_data',
testing = FALSE)
humanitariandata <- getHashtag(date = as.Date('2014-07-14'))
View(humanitariandata)
# for consistency I am using the scraperwiki name for the db
writeTables(df = humanitariandata,
table_name = 'humanitariandata',
db = 'indicataor_data',
testing = FALSE)
# for consistency I am using the scraperwiki name for the db
writeTables(df = humanitariandata,
table_name = 'humanitariandata',
db = 'scraperwiki',
testing = FALSE)
x <- getUser('humdata')
VieW(x)
View(x)
names(x)
class(x)
y <- data.frame(x)
y <- do.call("rbind", lapply(x, as.data.frame))
y <- do.call("rbind", sapply(x, as.data.frame))
x
View(x)
y <- as.data.frame(x)
View(y)
namex(y)
names(y)
getFriends <- function() {
x <- as.data.frame(getUser('humdata'))
y <- data.frame(tweets = x$statusesCount,
followers = x$followersCount,
favorites = x$favoritesCount,
following = x$friendsCount,
date = as.character(Sys.time()))
}
data <- getFriends()
View(data)
getFriends <- function() {
x <- as.data.frame(getUser('humdata'))
y <- data.frame(tweets = x$statusesCount,
followers = x$followersCount,
favorites = x$favoritesCount,
following = x$friendsCount,
date = as.character(as.Date(Sys.time())))
}
data <- getFriends()
View(data)
friends_data <- getFriends()
writeTables(df = friends_data,
table_name = 'friends_data',
db = 'scraperwiki',
testing = FALSE)
source('twitter/code/read_prepare.R')  # for collecting historical data
source('twitter/code/prepare_historical_data.R')  # for collecting historical data
source('twitter/code/prepare_historical_data.R')  # for collecting historical data
source('twitter/code/prepare_historical_data.R')  # for collecting historical data
source('twitter/code/read_prepare.R')
data <- readPrepare()
Q
source('twitter/code/read_prepare.R')
data <- readPrepare()
source('twitter/code/read_prepare.R')
data <- readPrepare()
View(data)
data
source('twitter/code/twitter_analysis.R')
results <- runTwitterAnalysis(source_list)
source_list <- readPrepare()
results <- runTwitterAnalysis(source_list)
source('twitter/code/twitter_analysis.R')
results <- runTwitterAnalysis(source_list)
View(results)
write.csv(results, 'twitter/data/results.csv', row.names = F)
View(results)
View(friends_data)
names(friends_data)
names(results)
names(friends_data)
friends_data_historical <- data.frame(tweets = NA,
followers = results$n_followers,
favorites = NA,
following = results$n_following,
date = results$df.Followers.date)
View(friends_data_historical)
write.csv(results, 'twitter/data/friends_data_historical.csv', row.names = F)
write.csv(friends_data_historical, 'twitter/data/friends_data_historical.csv', row.names = F)
# storing in the twitter db
writeTables(df = friends_data_historical,
table_name = 'friends_data',
db = 'scraperwiki',
testing = FALSE)
x <- dbReadTable('twitter/data/scraperwiki.db', 'friends_data')
x <- dbReadTable('twitter/data/scraperwiki.sqlite', 'friends_data')
db <- dbConnect(SQLite(), dbname = 'twitter/data/scraperwiki.sqlite')
x <- dbReadTable(db, 'friends_data')
View(x)
friends_data_historical
# storing in the twitter db
writeTables(df = friends_data_historical,
table_name = 'friends_data',
db = 'scraperwiki',
testing = FALSE)
db <- dbConnect(SQLite(), dbname = 'twitter/data/scraperwiki.sqlite')
x <- dbReadTable(db, 'friends_data')
x
friends_data
x <- rbind(friends_data, friends_data_historical)
View(x)
# selecting only what matters
friends_data_historical <- data.frame(tweets = NA,
followers = results$n_followers,
favorites = NA,
following = results$n_following,
date = results$df.Followers.date)
friends_data_historical
# selecting only what matters
friends_data_historical <- data.frame(tweets = NA,
followers = as.numeric(results$n_followers),
favorites = NA,
following = as.numeric(results$n_following),
date = as.character(results$df.Followers.date))
view(friends_data_historical)
View(friends_data_historical)
x <- rbind(friends_data, friends_data_historical)
View(x)
writeTables(df = x,
table_name = 'friends_data',
db = 'scraperwiki',
testing = FALSE)
db <- dbConnect(SQLite(), dbname = 'twitter/data/scraperwiki.sqlite')
x <- dbReadTable(db, 'friends_data')
x
x
x <- rbind(friends_data, friends_data_historical)
x
writeTables(df = x,
table_name = 'friends_data',
db = 'scraperwiki',
testing = FALSE)
db <- dbConnect(SQLite(), dbname = 'twitter/data/scraperwiki.sqlite')
x <- dbReadTable(db, 'friends_data')
x
x <- rbind(friends_data, friends_data_historical)
x
writeTables(df = x,
table_name = 'friends_data',
db = 'scraperwiki',
testing = FALSE)
db <- dbConnect(SQLite(), dbname = 'twitter/data/scraperwiki.sqlite')
y <- dbReadTable(db, 'friends_data')
View(y)
source('twitter/code/write_tables.R')
writeTables(df = x,
table_name = 'friends_data',
db = 'scraperwiki',
testing = FALSE)
db <- dbConnect(SQLite(), dbname = 'twitter/data/scraperwiki.sqlite')
y <- dbReadTable(db, 'friends_data')
y
nrow(y)
x
nrow(x)
unique(y)
nrow(unique(y))
y <- nrow(unique(y))
View(y)
y
View(x)
write.csv('twitter/data/twitter_data.csv', row.names = F)
x
write.csv(x, 'twitter/data/twitter_data.csv', row.names = F)
?rwite.csv
?write.csv
write.csv(x, 'twitter/data/twitter_data.csv', row.names = F, na = "")
write.csv(x, 'http/data/twitter_data.csv', row.names = F, na = "")
names(x)
twitter_friends <- data.frame(date = x$date,
followers = x$followers,
following = x$following)
View(twitter_friends)
View(twitter_friends)
write.csv(twitter_friends, 'http/data/twitter_friends.csv', row.names = F, na = "")
names(x)
twitter_tweets <- data.frame(date = x$date,
tweets = x$followers)
write.csv(twitter_tweets, 'http/data/twitter_tweets.csv', row.names = F, na = "")
twitter_tweets <- data.frame(date = x$date,
tweets = x$tweets)
write.csv(twitter_tweets, 'http/data/twitter_tweets.csv', row.names = F, na = "")
source('twitter/code/credentials.R')
require(twitteR)
#               destfile="twitter/auth/cacert.pem")
#to get your consumerKey and consumerSecret see the twitteR documentation for instructions
cred <- OAuthFactory$new(consumerKey='7SfTxcJHRVoLLD4JlhgDg',
consumerSecret='SDUu2EUUpoutE0zCnoRagCciZseOwnXu7S0I2ylY5M',
requestURL='https://api.twitter.com/oauth/request_token',
accessURL='https://api.twitter.com/oauth/access_token',
authURL='https://api.twitter.com/oauth/authorize')
# cred$handshake(cainfo="twitter/auth/cacert.pem")
# save(cred, file="twitter/auth/twitter authentication.Rdata")
registerTwitterOAuth(cred)
cred$handshake(cainfo="twitter/auth/cacert.pem")
registerTwitterOAuth(cred)
source('twitter/code/write_tables.R')
# Get the information from a hashtag
getHashtag <- function(hash = "#humanitariandata",
date = as.Date(Sys.time())) {
call <- searchTwitter(hash, n = 2000, since = as.character(date))
df <- do.call("rbind", lapply(call, as.data.frame))
df$created <- as.Date(df$created)
value <- data.frame(summary(as.factor(df$created)))
y <- data.frame(value,
hashtag = hash)
return(y)
}
# Get the 'friends' from an user
getFriends <- function() {
x <- as.data.frame(getUser('humdata'))
y <- data.frame(tweets = x$statusesCount,
followers = x$followersCount,
favorites = x$favoritesCount,
following = x$friendsCount,
date = as.character(as.Date(Sys.time())))
}
## collecting and storing data ##
# #HumanitarianData
humanitariandata <- getHashtag(date = as.Date('2014-07-14'))
writeTables(df = humanitariandata,
table_name = 'humanitariandata',
db = 'scraperwiki',
testing = FALSE)
# friends data
friends_data <- getFriends()
writeTables(df = friends_data,
table_name = 'friends_data',
db = 'scraperwiki',
testing = FALSE)
View(twitter_friends)
View(friends_data)
