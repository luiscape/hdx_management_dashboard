access_token=access_token)
number_visits_repo_total <- ga$GetReportData(query)
# Number of Unique Users to the Repository
query$Init(start.date = "2014-01-01",
end.date = as.character(as.Date(Sys.time())),
metrics = "ga:users",
table.id = r_profile,
access_token=access_token)
number_pageviews_repo_total <- ga$GetReportData(query)
# Number of Pageviews to the Repository
query$Init(start.date = "2014-01-01",
end.date = as.character(as.Date(Sys.time())),
metrics = "ga:pageviews",
table.id = r_profile,
access_token=access_token)
number_pageviews_repo_total <- ga$GetReportData(query)
# Number of Sessions to the Repository
query$Init(start.date = "2014-01-01",
end.date = as.character(as.Date(Sys.time())),
metrics = "ga:sessions",
table.id = r_profile,
access_token=access_token)
number_sessions_repo_total <- ga$GetReportData(query)
######################
#### Blog Metrics ####
######################
# Number of Visits to the Blog
query$Init(start.date = "2014-01-01",
end.date = as.character(as.Date(Sys.time())),
metrics = "ga:visits",
table.id = b_profile,
access_token=access_token)
number_visits_blog_total <- ga$GetReportData(query)
# Number of Unique Users to the Blog
query$Init(start.date = "2014-01-01",
end.date = as.character(as.Date(Sys.time())),
metrics = "ga:users",
table.id = b_profile,
access_token=access_token)
number_pageviews_blog_total <- ga$GetReportData(query)
# Number of Pageviews to the Blog
query$Init(start.date = "2014-01-01",
end.date = as.character(as.Date(Sys.time())),
metrics = "ga:pageviews",
table.id = b_profile,
access_token=access_token)
number_pageviews_blog_total <- ga$GetReportData(query)
# Number of Sessions to the Blog
query$Init(start.date = "2014-01-01",
end.date = as.character(as.Date(Sys.time())),
metrics = "ga:sessions",
table.id = b_profile,
access_token=access_token)
number_sessions_blog_total <- ga$GetReportData(query)
#### Storing Data ####
# Organizing data into the db format.
observations <- data.frame(indID = c('Number of Visits to the Repository',
'Number of Unique Users to the Repository',
'Number of Pageviews to the Repository',
'Number of Sessions to the Repository',
'Number of Visits to the Blog',
'Number of Unique Users to the Blog',
'Number of Pageviews to the Blog',
'Number of Sessions to the Blog'),
values = c(as.numeric(number_visits_repo_total),
as.numeric(number_unique_users_repo_total),
as.numeric(number_pageviews_repo_total),
as.numeric(number_sessions_repo_total),
as.numeric(number_visits_blog_total),
as.numeric(number_unique_users_blog_total),
as.numeric(number_pageviews_blog_total),
as.numeric(number_sessions_blog_total)),
dsID = 'google-analytics')
writeTables(observations, 'observations', 'scraperwiki')
View(observations)
source("google_analytics/code/write_tables.R")
######################
#### Repo Metrics ####
######################
# Number of Visits to the Repository
query$Init(start.date = "2014-01-01",
end.date = as.character(as.Date(Sys.time())),
metrics = "ga:visits",
table.id = r_profile,
access_token=access_token)
number_visits_repo_total <- ga$GetReportData(query)
# Number of Unique Users to the Repository
query$Init(start.date = "2014-01-01",
end.date = as.character(as.Date(Sys.time())),
metrics = "ga:users",
table.id = r_profile,
access_token=access_token)
number_unique_users_repo_total <- ga$GetReportData(query)
# Number of Pageviews to the Repository
query$Init(start.date = "2014-01-01",
end.date = as.character(as.Date(Sys.time())),
metrics = "ga:pageviews",
table.id = r_profile,
access_token=access_token)
number_pageviews_repo_total <- ga$GetReportData(query)
# Number of Sessions to the Repository
query$Init(start.date = "2014-01-01",
end.date = as.character(as.Date(Sys.time())),
metrics = "ga:sessions",
table.id = r_profile,
access_token=access_token)
number_sessions_repo_total <- ga$GetReportData(query)
######################
#### Blog Metrics ####
######################
# Number of Visits to the Blog
query$Init(start.date = "2014-01-01",
end.date = as.character(as.Date(Sys.time())),
metrics = "ga:visits",
table.id = b_profile,
access_token=access_token)
number_visits_blog_total <- ga$GetReportData(query)
# Number of Unique Users to the Blog
query$Init(start.date = "2014-01-01",
end.date = as.character(as.Date(Sys.time())),
metrics = "ga:users",
table.id = b_profile,
access_token=access_token)
number_unique_users_blog_total <- ga$GetReportData(query)
# Number of Pageviews to the Blog
query$Init(start.date = "2014-01-01",
end.date = as.character(as.Date(Sys.time())),
metrics = "ga:pageviews",
table.id = b_profile,
access_token=access_token)
number_pageviews_blog_total <- ga$GetReportData(query)
# Number of Sessions to the Blog
query$Init(start.date = "2014-01-01",
end.date = as.character(as.Date(Sys.time())),
metrics = "ga:sessions",
table.id = b_profile,
access_token=access_token)
number_sessions_blog_total <- ga$GetReportData(query)
#### Storing Data ####
# Organizing data into the db format.
observations <- data.frame(indID = c('Number of Visits to the Repository',
'Number of Unique Users to the Repository',
'Number of Pageviews to the Repository',
'Number of Sessions to the Repository',
'Number of Visits to the Blog',
'Number of Unique Users to the Blog',
'Number of Pageviews to the Blog',
'Number of Sessions to the Blog'),
values = c(as.numeric(number_visits_repo_total),
as.numeric(number_unique_users_repo_total),
as.numeric(number_pageviews_repo_total),
as.numeric(number_sessions_repo_total),
as.numeric(number_visits_blog_total),
as.numeric(number_unique_users_blog_total),
as.numeric(number_pageviews_blog_total),
as.numeric(number_sessions_blog_total)),
period = as.Date(Sys.time()))
View(v)
VieW(observations)
View(observations)
writeTables(observations, 'observations', 'scraperwiki')
observations
VieW(observations)
View(observations)
#### Storing Data ####
# Organizing data into the db format.
observations <- data.frame(indID = c('Number of Visits to the Repository (total)',
'Number of Unique Users to the Repository (total)',
'Number of Pageviews to the Repository (total)',
'Number of Sessions to the Repository (total)',
'Number of Visits to the Blog (total)',
'Number of Unique Users to the Blog (total)',
'Number of Pageviews to the Blog (total)',
'Number of Sessions to the Blog (total)'),
values = c(as.numeric(number_visits_repo_total),
as.numeric(number_unique_users_repo_total),
as.numeric(number_pageviews_repo_total),
as.numeric(number_sessions_repo_total),
as.numeric(number_visits_blog_total),
as.numeric(number_unique_users_blog_total),
as.numeric(number_pageviews_blog_total),
as.numeric(number_sessions_blog_total)),
period = as.Date(Sys.time()))
writeTables(observations, 'observations', 'scraperwiki')
#### Storing Data ####
# Organizing data into the db format.
observations <- data.frame(indID = c('Number of Visits to the Repository (total)',
'Number of Unique Users to the Repository (total)',
'Number of Pageviews to the Repository (total)',
'Number of Sessions to the Repository (total)',
'Number of Visits to the Blog (total)',
'Number of Unique Users to the Blog (total)',
'Number of Pageviews to the Blog (total)',
'Number of Sessions to the Blog (total)'),
values = c(as.numeric(number_visits_repo_total),
as.numeric(number_unique_users_repo_total),
as.numeric(number_pageviews_repo_total),
as.numeric(number_sessions_repo_total),
as.numeric(number_visits_blog_total),
as.numeric(number_unique_users_blog_total),
as.numeric(number_pageviews_blog_total),
as.numeric(number_sessions_blog_total)),
period = as.Date(Sys.time()))
writeTables(observations, 'observations', 'scraperwiki')
View()
#### Storing Data ####
# Organizing data into the db format.
observations <- data.frame(indID = c('Number of Visits to the Repository (total)',
'Number of Unique Users to the Repository (total)',
'Number of Pageviews to the Repository (total)',
'Number of Sessions to the Repository (total)',
'Number of Visits to the Blog (total)',
'Number of Unique Users to the Blog (total)',
'Number of Pageviews to the Blog (total)',
'Number of Sessions to the Blog (total)'),
values = c(as.numeric(number_visits_repo_total),
as.numeric(number_unique_users_repo_total),
as.numeric(number_pageviews_repo_total),
as.numeric(number_sessions_repo_total),
as.numeric(number_visits_blog_total),
as.numeric(number_unique_users_blog_total),
as.numeric(number_pageviews_blog_total),
as.numeric(number_sessions_blog_total)),
period = as.Date(Sys.time()))
writeTables(observations, 'observations', 'scraperwiki')
View(observations)
setwd("~/Documents/Programming/scraperwiki-temp/dnv1xak")
writeTables(observations, 'observations', 'scraperwiki')
?readTables
??readtables
indicators <- data.frame(indID = unique(observations$indID), dsID = 'google-analytics' name = unique(observations$name))
# test
indicators <- data.frame(indID = unique(observations$indID), dsID = 'google-analytics', name = unique(observations$name))
indicators <- data.frame(indID = unique(observations$indID), dsID = 'google-analytics', name = c(unique(observations$name)))
indicators <- data.frame(indID = unique(observations$indID), dsID = 'google-analytics', name = as.character(unique(observations$name)))
as.character(unique(observations$name))
as.character(unique(observations$names))
indicators <- data.frame(indID = unique(observations$indID), dsID = 'google-analytics', name = c('Number of Visits to the Repository (total)', 'Number of Unique Users to the Repository (total)', 'Number of Pageviews to the Repository (total)', 'Number of Sessions to the Repository (total)', 'Number of Visits to the Blog (total)', 'Number of Unique Users to the Blog (total)', 'Number of Pageviews to the Blog (total)', 'Number of Sessions to the Blog (total)'))
View(indicators)
observations <- data.frame(indID = c('number_visits_repo_total',
'number_unique_users_repo_total',
'number_pageviews_repo_total',
'number_sessions_repo_total',
'number_visits_blog_total',
'number_unique_users_blog_total',
'number_pageviews_blog_total',
'number_sessions_blog_total'),
values = c(as.numeric(number_visits_repo_total),
as.numeric(number_unique_users_repo_total),
as.numeric(number_pageviews_repo_total),
as.numeric(number_sessions_repo_total),
as.numeric(number_visits_blog_total),
as.numeric(number_unique_users_blog_total),
as.numeric(number_pageviews_blog_total),
as.numeric(number_sessions_blog_total)),
period = as.Date(Sys.time()))
# test
indicators <- data.frame(indID = unique(observations$indID), dsID = 'google-analytics', name = c('Number of Visits to the Repository (total)', 'Number of Unique Users to the Repository (total)', 'Number of Pageviews to the Repository (total)', 'Number of Sessions to the Repository (total)', 'Number of Visits to the Blog (total)', 'Number of Unique Users to the Blog (total)', 'Number of Pageviews to the Blog (total)', 'Number of Sessions to the Blog (total)'))
View(observations)
writeTables(observations, 'observations', 'scraperwiki')
db <- dbConnect(SQLite(), dbname = 'scraperwiki.sqlite')
dbReadTable(db, 'observations')
x <- dbReadTable(db, 'observations')
View(bg_scraperwiki.sqlite)
View(x)
db <- dbConnect(SQLite(), dbname = 'scraperwiki.sqlite')
x <- dbReadTable(db, 'observations')
View(x)
observations <- data.frame(period = as.Date(Sys.time()),
indID = c('number_visits_repo_total',
'number_unique_users_repo_total',
'number_pageviews_repo_total',
'number_sessions_repo_total',
'number_visits_blog_total',
'number_unique_users_blog_total',
'number_pageviews_blog_total',
'number_sessions_blog_total'),
values = c(as.numeric(number_visits_repo_total),
as.numeric(number_unique_users_repo_total),
as.numeric(number_pageviews_repo_total),
as.numeric(number_sessions_repo_total),
as.numeric(number_visits_blog_total),
as.numeric(number_unique_users_blog_total),
as.numeric(number_pageviews_blog_total),
as.numeric(number_sessions_blog_total)))
View(observations)
writeTables(observations, 'observations', 'scraperwiki')
db <- dbConnect(SQLite(), dbname = 'scraperwiki.sqlite')
x <- dbReadTable(db, 'observations')
View(x)
observations <- data.frame(period = as.character(as.Date(Sys.time())),
indID = c('number_visits_repo_total',
'number_unique_users_repo_total',
'number_pageviews_repo_total',
'number_sessions_repo_total',
'number_visits_blog_total',
'number_unique_users_blog_total',
'number_pageviews_blog_total',
'number_sessions_blog_total'),
values = c(as.numeric(number_visits_repo_total),
as.numeric(number_unique_users_repo_total),
as.numeric(number_pageviews_repo_total),
as.numeric(number_sessions_repo_total),
as.numeric(number_visits_blog_total),
as.numeric(number_unique_users_blog_total),
as.numeric(number_pageviews_blog_total),
as.numeric(number_sessions_blog_total)))
writeTables(observations, 'observations', 'scraperwiki')
db <- dbConnect(SQLite(), dbname = 'scraperwiki.sqlite')
x <- dbReadTable(db, 'observations')
View(x)
#### Storing Data ####
# Organizing data into the db format.
observations <- data.frame(period = as.character(as.Date(Sys.time())),
indID = c('Number_of_Visits_Repo_Total',
'Number_of_Unique_Users_Repo_Total',
'Number_of_Pageviews_Repo_Total',
'Number_of_Sessions_Repo_Total',
'Number_of_Visits_Blog_Total',
'Number_of_Unique_Users_Blog_Total',
'Number_of_Pageviews_Blog_Total',
'Number_of_Sessions_Blog_Total'),
values = c(as.numeric(number_visits_repo_total),
as.numeric(number_unique_users_repo_total),
as.numeric(number_pageviews_repo_total),
as.numeric(number_sessions_repo_total),
as.numeric(number_visits_blog_total),
as.numeric(number_unique_users_blog_total),
as.numeric(number_pageviews_blog_total),
as.numeric(number_sessions_blog_total)))
writeTables(observations, 'observations', 'scraperwiki')
db <- dbConnect(SQLite(), dbname = 'scraperwiki.sqlite')
x <- dbReadTable(db, 'observations')
View(x)
# test
indicators <- data.frame(indID = unique(observations$indID), dsID = 'google-analytics', name = c('Number of Visits to the Repository (total)', 'Number of Unique Users to the Repository (total)', 'Number of Pageviews to the Repository (total)', 'Number of Sessions to the Repository (total)', 'Number of Visits to the Blog (total)', 'Number of Unique Users to the Blog (total)', 'Number of Pageviews to the Blog (total)', 'Number of Sessions to the Blog (total)'))
View(indicators)
x <- dbReadTable(db, 'indicators')
View(x)
# test
indicators <- data.frame(indID = unique(observations$indID), name = c('Number of Visits to the Repository (total)', 'Number of Unique Users to the Repository (total)', 'Number of Pageviews to the Repository (total)', 'Number of Sessions to the Repository (total)', 'Number of Visits to the Blog (total)', 'Number of Unique Users to the Blog (total)', 'Number of Pageviews to the Blog (total)', 'Number of Sessions to the Blog (total)'), dsID = 'google-analytics')
View(indicators)
x <- dbReadTable(db, 'indicators')
View(x)
writeTables(indicators, 'indicators', 'scraperwiki')
x <- dbReadTable(db, 'indicators')
View(x)
x <- dbReadTable(db, 'datasets')
View(x)
names(x)
datasets <- data.frame(dsID = 'google-analytics', last_scraped = as.character(as.Date(Sys.time())), name = 'Google Analytics', source = 'https://developers.google.com/analytics/')
VieW(datasets)
View(datasets)
writeTables(datasets, 'datasets', 'scraperwiki')
x <- dbReadTable(db, 'datasets')
View(x)
setwd("~/Documents/Programming/hdx_management_dashboard")
#### Google Analytics script. ####
# loading Google dependencies
source("google_analytics/code/RGoogleAnalytics.R")
source("google_analytics/code/QueryBuilder.R")
source("google_analytics/code/Configuration.R")
source("google_analytics/code/write_tables.R")
# Step 1. Authorize your account and paste the accesstoken
query <- QueryBuilder()
access_token <- query$authorize()
# Step 2. Initialize the configuration object
conf <- Configuration()
# Retrieving a list of Accounts
ga.account <- conf$GetAccounts()
testConnection <- function() {
if (nrow(ga.account) != 3) message('There are problems with auth.')
else message('Connection established with Google Analytics.\n.')
}
testConnection()
# Retrieving a list of Web Properties
# With passing parameter as (ga.account$id[index]) will retrieve list of web properties under that account
ga.webProperty <- conf$GetWebProperty()
ga.webProperty
# Retrieving a list of web profiles available for specific Google Analytics account and Web property
# by passing with two parameters - (ga.account$id,ga.webProperty$id).
# With passing No parameters will retrieve all of web profiles
ga.webProfile_repo <- conf$GetWebProfile(ga.account$id[3],ga.webProperty$id[7])
ga.webProfile_blog <- conf$GetWebProfile(ga.account$id[3],ga.webProperty$id[6])
ga.webProfile
# Step 3. Create a new Google Analytics API object
ga <- RGoogleAnalytics()
# Old way to retrieve profiles from Google Analytics
ga.profiles <- ga$GetProfileData(access_token)
# List the GA profiles
ga.profiles
# Step 4. Setting up the input parameters
profile <- ga.webProfile_repo$id[1]  # data for the repository
# profile <- ga.webProfile$id[1]  # data for the blog
startdate <- "2014-01-01"
enddate <- "2014-08-18"
# dimension <- "ga:date,ga:source,ga:pageTitle,ga:pagePath"
metric <- "ga:visits"
#filter <-
# segment <- ga.segments$segmentId[8]
sort <- "ga:visits"
maxresults <- 10000
# Step 5. Build the query string, use the profile by setting its index value
# Buiding the queries.
r_profile <- "ga:85660823"
b_profile <- "ga:82675519"
query$Init(start.date = startdate,
end.date = enddate,
# dimensions = dimension,
metrics = metric,
#sort = sort,
#filters="",
#segment=segment,
# max.results = maxresults,
table.id = paste("ga:",profile, sep=""),
access_token=access_token)
######################
#### Repo Metrics ####
######################
# Number of Visits to the Repository
query$Init(start.date = "2014-01-01",
end.date = as.character(as.Date(Sys.time())),
metrics = "ga:visits",
table.id = r_profile,
access_token=access_token)
number_visits_repo_total <- ga$GetReportData(query)
# Number of Unique Users to the Repository
query$Init(start.date = "2014-01-01",
end.date = as.character(as.Date(Sys.time())),
metrics = "ga:users",
table.id = r_profile,
access_token=access_token)
number_unique_users_repo_total <- ga$GetReportData(query)
# Number of Pageviews to the Repository
query$Init(start.date = "2014-01-01",
end.date = as.character(as.Date(Sys.time())),
metrics = "ga:pageviews",
table.id = r_profile,
access_token=access_token)
number_pageviews_repo_total <- ga$GetReportData(query)
# Number of Sessions to the Repository
query$Init(start.date = "2014-01-01",
end.date = as.character(as.Date(Sys.time())),
metrics = "ga:sessions",
table.id = r_profile,
access_token=access_token)
number_sessions_repo_total <- ga$GetReportData(query)
######################
#### Blog Metrics ####
######################
# Number of Visits to the Blog
query$Init(start.date = "2014-01-01",
end.date = as.character(as.Date(Sys.time())),
metrics = "ga:visits",
table.id = b_profile,
access_token=access_token)
number_visits_blog_total <- ga$GetReportData(query)
# Number of Unique Users to the Blog
query$Init(start.date = "2014-01-01",
end.date = as.character(as.Date(Sys.time())),
metrics = "ga:users",
table.id = b_profile,
access_token=access_token)
number_unique_users_blog_total <- ga$GetReportData(query)
# Number of Pageviews to the Blog
query$Init(start.date = "2014-01-01",
end.date = as.character(as.Date(Sys.time())),
metrics = "ga:pageviews",
table.id = b_profile,
access_token=access_token)
number_pageviews_blog_total <- ga$GetReportData(query)
# Number of Sessions to the Blog
query$Init(start.date = "2014-01-01",
end.date = as.character(as.Date(Sys.time())),
metrics = "ga:sessions",
table.id = b_profile,
access_token=access_token)
number_sessions_blog_total <- ga$GetReportData(query)
#### Storing Data ####
# Organizing data into the db format.
observations <- data.frame(period = as.character(as.Date(Sys.time())),
indID = c('Number_of_Visits_Repo_Total',
'Number_of_Unique_Users_Repo_Total',
'Number_of_Pageviews_Repo_Total',
'Number_of_Sessions_Repo_Total',
'Number_of_Visits_Blog_Total',
'Number_of_Unique_Users_Blog_Total',
'Number_of_Pageviews_Blog_Total',
'Number_of_Sessions_Blog_Total'),
values = c(as.numeric(number_visits_repo_total),
as.numeric(number_unique_users_repo_total),
as.numeric(number_pageviews_repo_total),
as.numeric(number_sessions_repo_total),
as.numeric(number_visits_blog_total),
as.numeric(number_unique_users_blog_total),
as.numeric(number_pageviews_blog_total),
as.numeric(number_sessions_blog_total)))
writeTables(observations, 'observations', 'scraperwiki')
# Storing the GA indicators
# indicators <- data.frame(indID = unique(observations$indID), name = c('Number of Visits to the Repository (total)', 'Number of Unique Users to the Repository (total)', 'Number of Pageviews to the Repository (total)', 'Number of Sessions to the Repository (total)', 'Number of Visits to the Blog (total)', 'Number of Unique Users to the Blog (total)', 'Number of Pageviews to the Blog (total)', 'Number of Sessions to the Blog (total)'), dsID = 'google-analytics')
# writeTables(indicators, 'indicators', 'scraperwiki')
# Storing the GA dataset
#datasets <- data.frame(dsID = 'google-analytics', last_scraped = as.character(as.Date(Sys.time())), name = 'Google Analytics', source = 'https://developers.google.com/analytics/')
#writeTables(datasets, 'datasets', 'scraperwiki')
# DB tests
# db <- dbConnect(SQLite(), dbname = 'scraperwiki.sqlite')
#x <- dbReadTable(db, 'datasets')
query
as.Date(Sys.time())
as.Date(Sys.time()) - 14
as.character(as.Date(Sys.time()) - 14)
two_weeks <- as.character(as.Date(Sys.time()) - 14)
